;; 
;;    $Id: Fall.km,v 1.31 2006/03/24 21:57:08 kbarker Exp $ 
;; 

(Fall has
  (superclasses 	(Move))
  (required-slot  	(object))
  (primary-slot 	(origin destination path))
  (secondary-slot 	())
  (cmap-correspondence 	(
			 (:seq object "the thing falling")
			 (:seq origin "starting point")
			 (:seq destination "terminal point")
			 (:seq path "moved through")
			))
#|(sentence-type        (*punctual *conclusive))|#
)

;; Not much to say about Fall except that it does not have
;; an agent and it has a required direction.
(every Fall has
       (agent     ((exactly 0 Entity)))
       
       ;; the object of Self must not be supported
       (pcs-list  ((forall (the object of Self)
			   (:triple
			    It
			    object-of
			    (mustnt-be-a Be-Supported)))))
       (duration     ((a Duration-Value)))

#| Removed for demo!
       (distance     ((the height of 
			   (the origin of Self))))
       (origin       ((a Spatial-Entity with
			 (height ((a Length-Value))))))
|#
       (distance     ((a Length-Value)))

       (origin	     ((a Spatial-Entity)))
 
       (destination  ((a Spatial-Entity)))
;       (velocity     ((a Velocity-Value)))
;       (acceleration (*Gravity))         ;; remove to allow Aura to add
)

       
(every Fall has
  (text-passive-verbseq-sg ("falls"))
  (text-passive-verbseq-pl ("fall"))
)

;; nothing extra to say about contextual info
;; inherited from Move and Action

(every Fall has
   (preparatory-event ((:default
	(a Support with
	    (object ((the object of Self)))
	    (agent  ((the agent of Self))))
))))

(Fall has 
      (test-case ('(
		    (*meteor has 
			     (instance-of (Tangible-Entity))
                             (location ((a Place))))
		    (*trailer has
			      (instance-of (Tangible-Entity))
                              (location ((a Place))))
		    
					; *meteor fell on a *trailer.		 
		    (a Fall with 
		       (object 	(*meteor))
		       (destination ((the location of *trailer))))
		    
		    (do-and-next (thelast Fall))
		    
		    ((the location of *meteor) = (the location of *trailer))

                    (new-situation)

                    (*computer has (instance-of (Tangible-Entity))
                                   (location ((a Place))))
                    (*window has (instance-of (Tangible-Entity)))
                    (*patio has (instance-of (Tangible-Entity))
                                (location ((a Place)))
                                (is-under (*window)))

                            ; computer fell through the window onto the patio
                    (a Fall with
                            (object (*computer))
                            (path (*window))
                            (destination (*patio)))

                    (do-and-next (thelast Fall))

                    ((the location of *computer) = (the location of *patio))
                    ((the is-under of *computer) includes *window)

		    )))
      )



;; automatically added WN synsets
(Fall has (wn16-synset ((:set  
                                   (:triple "fall" 1 "v")
))))

(Fall has (wn20-synset ((:set
                                   (:triple "fall" 1 "v")
))))

(every Fall has (text-nominalization ("fall")))
