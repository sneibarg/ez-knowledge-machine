;; 
;;    $Id: Enter.km,v 1.19 2005/10/25 03:02:09 sdbaji Exp $ 
;; 

(Enter has
         (superclasses 	 (Move-Into Reflexive-Cliche))
         (required-slot  (agent object base))
         (primary-slot 	 (destination origin path))
         (secondary-slot ())
	 (cmap-correspondence (
			       (:seq agent "the enter'er")
			       (:seq object "the enter'er")
			       (:seq base "the enclosure")
			       (:seq destination "final location")
			       (:seq origin "original location")
			       (:seq path "the portal")
			       ))
       #|(sentence-type  (*punctual *conclusive))|#
)

; The meaning of Enter is fully captured by its superclass, Move-Into, 
; with the Reflexive cliche.
; (every Enter has ())

(every Enter has
  (agent ((the object of Self)))
  (text-active-verbseq-sg ("enters"))
  (text-active-verbseq-pl ("enter"))

  (text-base (()))

)


(every Enter has-definition
   (instance-of (Move-Into Reflexive-Cliche)))

;; nothing extra to say about contextual info
;; inherited from Move and Action

(Enter has 
       (test-case ('(
		     (*John has  
                        (instance-of (Living-Entity))
                        (is-outside (*House)))

		     (*Enter-doorway has  
			       (instance-of (Spatial-Entity)))

                     (*House-Location has (instance-of (Place)))
		     (*House has 
		       (instance-of (Physical-Object))
                       (location (*House-Location)))

                     (a Move-Into with
                        (agent (*John))
                        (object (*John)))

                     ((thelast Move-Into) isa Enter)

                     (the text-gen of (thelast Enter))

		     ; *John enters *House
		     (a Enter with
		      (agent (*John))
		      (base (*House))
		      (path (*Enter-doorway)))
		     (do-and-next (thelast Enter))

                     (the text-gen of (thelast Enter))

		     ; Test1: *John went through *Door
		     ((the path of (thelast Enter)) = *Enter-doorway)

		     ; Test2: *House now contains *John
		     ((the content of (the Container plays of *House)) includes *John)
		     
		     ; Test3: *John is now located inside *House
		     ((the is-inside of *John) includes *House)

		     ; Test4: *John is no longer located outside *House
		     ((the is-outside of (the location of *John)) /=
                      *House-Location)
))))


;; automatically added WN synsets
(Enter has (wn16-synset ((:set  
                                    (:triple "enter" 1 "v")
                                    (:triple "come_in" 1 "v")
                                    (:triple "get_into" 2 "v")
                                    (:triple "get_in" 1 "v")
                                    (:triple "go_into" 1 "v")
                                    (:triple "go_in" 1 "v")
                                    (:triple "move_into" 1 "v")
))))

(Enter has (wn20-synset ((:set
                                    (:triple "enter" 1 "v")
                                    (:triple "come_in" 1 "v")
                                    (:triple "get_into" 2 "v")
                                    (:triple "get_in" 1 "v")
                                    (:triple "go_into" 1 "v")
                                    (:triple "go_in" 1 "v")
                                    (:triple "move_into" 1 "v")
))))

(every Enter has (text-nominalization ("entry")))