;; 
;;    $Id: Restrain.km,v 1.19 2005/10/25 03:02:10 sdbaji Exp $ 
;; 

(Restrain has
	  (superclasses		(Obstruct))
	  (required-slot   	(object))
	  (primary-slot 	(agent))
	  (secondary-slot      	())
	  (cmap-correspondence 	(
				 (:seq object "restrainee")
				 (:seq agent  "restrainer")
				 ))
        #|(sentence-type (*punctual *conclusive))|#
	  )

(every Restrain has
       (object ((a Tangible-Entity)))

       ;; The agent (if one is specified) is inherited from Obstruct.

       (resulting-state ((a Be-Restrained)))

       ;; The precondition is that the object cannot be restrained 
       ;; by the same agent more than once.
       (pcs-list ((forall (the object of Self)
			  ((:triple 
			    It
			    object-of
			    (mustnt-be-a Be-Restrained with
					 (object ((the object of Self)))
					 (agent  ((the agent of Self)))))))))

       ;; The post-conditions are inherited from the superclass
       ;; Obstruct.
       )

(every Restrain has
  (text-active-verbseq-sg ("restrains"))
  (text-active-verbseq-pl ("restrain"))
  (text-passive-verbseq-sg ("gets restrained"))
  (text-passive-verbseq-pl ("get restrained"))
)


(every Restrain has
       (preparatory-event ((:default
			  (a Unrestrain with
			     (object ((the object of Self))))))
))

(Restrain has 
  (test-case      ('(
		     (*mugger has (instance-of (Physical-Object)))
                            
		     (a Restrain with 
		      (object (*mugger)))
                            
		     (do-and-next (thelast Restrain))
                     (the text-gen of (thelast Restrain))
		     (forall (the resulting-state of (thelast Restrain)) (the text-gen of It))
		     (has-value (the Be-Restrained object-of of *mugger))

		     (a Move with (object (*mugger)))
		     (not (try-do (thelast Move)))
		     (the text-gen of (thelast Move))
		     ))))




;; automatically added WN synsets
(Restrain has (wn16-synset ((:set  
                                       (:triple "restrain" 1 "v")
                                       (:triple "restrain" 3 "v")
                                       (:triple "confine" 6 "v")
                                       (:triple "hold" 4 "v")
                                       (:triple "hold_back" 2 "v")
                                       (:triple "keep" 14 "v")
                                       (:triple "keep_back" 1 "v")
))))

(Restrain has (wn20-synset ((:set
                                       (:triple "restrain" 1 "v")
                                       (:triple "restrain" 3 "v")
                                       (:triple "confine" 6 "v")
                                       (:triple "hold" 4 "v")
                                       (:triple "hold_back" 2 "v")
                                       (:triple "keep" 14 "v")
                                       (:triple "keep_back" 1 "v")
))))
(every Restrain has (text-nominalization ("restraining")))