;; 
;;    $Id: Follow.km,v 1.7 2005/10/25 03:02:09 sdbaji Exp $
;; 

(Follow has
	    (superclasses (Locomotion))
	    (required-slot       (object agent))
	    (primary-slot 	 ())
	    (secondary-slot      ())
	    (cmap-correspondence (
				  (:seq agent "the mover")
				  (:seq object "the mover")
				  ))
          #|(sentence-type       (*punctual *conclusive))|#
)

; Follow is a Locomotion with the same path as a "prior" Locomotion.
; The "prior" is interpreted here simply to mean that the "following"
; Locomoter is-behind the "prior" Locomoter

(every Follow has
  (agent ((a Entity with
             (is-behind ((the base of Self))))))
  (base  ((a Entity with
             (agent-of ((a Locomotion with 
                           (path ((the path of Self)))
                           (destination ((the destination of Self))))))
  )))
  (path  ((a Spatial-Entity)))
  (destination ((a Spatial-Entity)))

#|  This is a little too ambitious for now (KB)
  ;; agent should know the trajectory/path of the thing it follows
  (soft-pcs-list ((:triple (the agent of Self)
			   experiencer-of
			   (a Be-Known with
			      (object ((a Information with
					  (information-content (the object of Self)))))))

		  ;; or must be able to perceive the object
		  (forall (the object of Self)
			  (:triple (It)
				   object-of
				   (a Perceive with
				      (agent ((the agent of Self))))))))
|#

  (text-active-verbseq-sg ("follows"))
  (text-active-verbseq-pl ("follow"))
)


(Follow has (wn20-synset ((:set
			   (:triple "follow" 1 "v")
))))
(every Follow has (text-nominalization ("following")))